**************
NNS开发者手册
**************

现阶段NNS在测试网已经部署完成，主网部署也即将进行，开发者可以根据本指导手册完成在自己开发的NEO钱包中对NNS的接入。

在NNS的架构中，我们采用了一个域名管理中心合约来对不同的顶级域名进行管理，测试网顶级域名管理中心合约地址：

::

    0x954f285a93eed7b4aed9396a7806a5812f1a5950

测试网
===========

在测试网中，域名的注册使用先到先得的方式进行，没有拍卖的过程。在用户输入域名之后，调用接口查询域名是否已注册，如果已注册则显示注册信息，如果没有注册，则允许用户进行注册。

由于测试网中注册域名没有拍卖过程，所以测试网的域名注册不需要SGAS以及拍卖等复杂操作。

.. _domaincheck:

域名查询
----------

我们在测试网中部署的顶级域名为 **test** 顶级域名，在用户注册域名时，需要获取顶级域名的哈希值，然后拼接上用户输入的域名，详情参考:ref:`domainhash`。
获取域名注册信息的脚本构造如下：

::

    var sb = new ThinNeo.ScriptBuilder();
    sb.EmitParamJson([ "(bytes)" + domain.toHexString() ]);//第二个参数是个数组
    sb.EmitPushString("getOwnerInfo");
    sb.EmitAppCall(address);

其中address是域名中心的地址，domain就是用户域名的哈希结果。域名中心在解析到顶级域名为 *test* 时，会动态调用 *test* 注册器，请求响应域名的注册信息。


域名注册
-----------

测试网中域名的注册过程相对简单，谁先注册域名谁就拥有这个域名的所有权。测试网注册域名首先需要获取 *test* 注册器的合约地址：

::

    var sb = new ThinNeo.ScriptBuilder();
    sb.EmitParamJson([ "(bytes)" + domain.toHexString() ]);//第二个参数是个数组
    sb.EmitPushString("getOwnerInfo");
    sb.EmitAppCall(address);

其中address是域名中心的地址，domain是 *test* 的哈希值。通过向域名管理中心发送 "getOwnerInfo" 指令并发送 *test* 的哈希值，就可以获取到 *test* 注册器的地址。

在获取到 *test* 注册器地址之后，就可以通过 *test* 注册器注册 *test* 域名:

::

    sb.EmitParamJson([ "(addr)" + address, "(bytes)" + nnshash.toHexString(), "(str)" + doamin ]);
    sb.EmitPushString("requestSubDomain");
    sb.EmitAppCall(address);

这里的address是前一步获取到的 *test* 注册器的地址，注册的命令为"requestSubDomain"。注册域名需要三个参数，第一个时域名本身，第二个是上一级级域名的哈希值，第三个是注册域名的
用户的NEO账户地址，注意，在构造交易脚本是，参数倒序压栈。由于这个请求需要对用户的身份进行验证，所以本交易需要签名。


主网
===========

主网的接入比测试网复杂许多，因为主网除了会引入拍卖机制外还有为了实现代币循环系统而引入的经济模型。

域名查询
-----------

主网的域名查询和测试网一样，都是直接向域名管理中心发送查询命令，然后传入需要查询的域名的明文+上一级域名的哈希值，域名中心通过动态向上一级域名请求域名信息来获取域名的注册详情。

详情参考:ref:`domaincheck`。

域名开拍
-----------

如果用户查询的域名没有被注册或者上一个所有者没有及时续费，那么用户就可以申请开拍该域名

加价
-----------

结束竞拍
-----------

领取域名
------------

SGAS
-------------

NNC
--------------

兑换SGAS
-----------

兑换GAS
-----------

注册器充值
-----------

领取SGAS
------------

------------

~~~~~~~~~~~~~~~~~